<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Dashboard</title>
  <!-- Include Tailwind CSS from CDN (for production, consider installing via npm) -->
  <script src="https://cdn.tailwindcss.com"></script>
  <!-- Include Lucide Icons -->
  <script src="https://unpkg.com/lucide@latest"></script>
  <script src="/socket.io/socket.io.js"></script>
</head>

<body class="bg-gray-100 min-h-screen">
  <!-- Navigation -->
  <nav class="bg-white text-gray-900 shadow-md">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="flex justify-between h-16">
        <div class="flex items-center">
          <a href="/api/tasks/dashboard" class="text-xl font-bold">Task Manager</a>
        </div>
        
        <div class="flex items-center space-x-4">
          <!-- Manage Tasks Button (active) -->
          <a href="/api/tasks/manage" class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-black hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-black">
            <i data-lucide="clipboard-list" class="h-4 w-4 mr-2"></i>
            <span class="hidden sm:inline">Gérer les tâches</span>
            <span class="sm:hidden">Tâches</span>
          </a>
    
          
          <!-- Dashboard Button -->
          <a href="/api/tasks/dashboard" class="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-black">
            <i data-lucide="layout-dashboard" class="h-4 w-4 mr-2"></i>
            <span class="hidden sm:inline">Dashboard</span>
            <span class="sm:hidden">Dashboard</span>
          </a>
          
          <!-- User and Logout Buttons -->
          <a href="/api/users/manage" class="p-2 rounded-md hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-300">
            <i data-lucide="user" class="h-5 w-5"></i>
          </a>
          <a href="/api/users/logout" class="p-2 rounded-md hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-300">
            <i data-lucide="log-out" class="h-5 w-5"></i>
          </a>
        </div>
      </div>
    </div>
  </nav>

  <!-- Main Content -->
  <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <div class="mb-8">
      <h1 class="text-3xl font-bold text-gray-900">Dashboard</h1>
      <p class="mt-1 text-gray-600">Aperçu de vos tâches et statistiques</p>
    </div>

    <!-- Stats Section -->
    <div id="stats">
      <h2 class="text-xl font-semibold text-gray-800 mb-4">Statistiques des tâches</h2>

      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4">
        <!-- Total Tasks Card -->
        <div class="bg-white rounded-lg shadow-md p-6 border-t-4 border-black">
          <div class="flex items-center">
            <div class="p-3 rounded-full bg-gray-100 mr-4">
              <i data-lucide="list-todo" class="h-6 w-6 text-black"></i>
            </div>
            <div>
              <p class="text-sm font-medium text-gray-600">Total des tâches</p>
              <p id="totalTasks" class="text-2xl font-bold text-gray-900">--</p>
            </div>
          </div>
        </div>

        <!-- Pending Tasks Card -->
        <div class="bg-white rounded-lg shadow-md p-6 border-t-4 border-yellow-500">
          <div class="flex items-center">
            <div class="p-3 rounded-full bg-gray-100 mr-4">
              <i data-lucide="clock" class="h-6 w-6 text-yellow-500"></i>
            </div>
            <div>
              <p class="text-sm font-medium text-gray-600">En attente</p>
              <p id="pending" class="text-2xl font-bold text-gray-900">--</p>
            </div>
          </div>
        </div>

        <!-- In Progress Tasks Card -->
        <div class="bg-white rounded-lg shadow-md p-6 border-t-4 border-blue-500">
          <div class="flex items-center">
            <div class="p-3 rounded-full bg-gray-100 mr-4">
              <i data-lucide="loader" class="h-6 w-6 text-blue-500"></i>
            </div>
            <div>
              <p class="text-sm font-medium text-gray-600">En cours</p>
              <p id="in_progress" class="text-2xl font-bold text-gray-900">--</p>
            </div>
          </div>
        </div>

        <!-- Completed Tasks Card -->
        <div class="bg-white rounded-lg shadow-md p-6 border-t-4 border-green-500">
          <div class="flex items-center">
            <div class="p-3 rounded-full bg-gray-100 mr-4">
              <i data-lucide="check-circle" class="h-6 w-6 text-green-500"></i>
            </div>
            <div>
              <p class="text-sm font-medium text-gray-600">Terminées</p>
              <p id="completed" class="text-2xl font-bold text-gray-900">--</p>
            </div>
          </div>
        </div>

        <!-- Cancelled Tasks Card -->
        <div class="bg-white rounded-lg shadow-md p-6 border-t-4 border-red-500">
          <div class="flex items-center">
            <div class="p-3 rounded-full bg-gray-100 mr-4">
              <i data-lucide="x-circle" class="h-6 w-6 text-red-500"></i>
            </div>
            <div>
              <p class="text-sm font-medium text-gray-600">Annulées</p>
              <p id="cancelled" class="text-2xl font-bold text-gray-900">--</p>
            </div>
          </div>
        </div>
      </div>

      <!-- Progress Overview -->
      <div class="mt-8 bg-white rounded-lg shadow-md p-6">
        <h3 class="text-lg font-semibold text-gray-800 mb-4">Progression des tâches</h3>
        <div class="space-y-4">
          <!-- Pending Progress -->
          <div>
            <div class="flex justify-between mb-1">
              <span class="text-sm font-medium text-gray-700">En attente</span>
              <span id="pending-percent" class="text-sm font-medium text-gray-700">--%</span>
            </div>
            <div class="w-full bg-gray-200 rounded-full h-2">
              <div id="pending-bar" class="bg-yellow-500 h-2 rounded-full" style="width: 0%"></div>
            </div>
          </div>

          <!-- In Progress -->
          <div>
            <div class="flex justify-between mb-1">
              <span class="text-sm font-medium text-gray-700">En cours</span>
              <span id="in-progress-percent" class="text-sm font-medium text-gray-700">--%</span>
            </div>
            <div class="w-full bg-gray-200 rounded-full h-2">
              <div id="in-progress-bar" class="bg-blue-500 h-2 rounded-full" style="width: 0%"></div>
            </div>
          </div>

          <!-- Completed -->
          <div>
            <div class="flex justify-between mb-1">
              <span class="text-sm font-medium text-gray-700">Terminées</span>
              <span id="completed-percent" class="text-sm font-medium text-gray-700">--%</span>
            </div>
            <div class="w-full bg-gray-200 rounded-full h-2">
              <div id="completed-bar" class="bg-green-500 h-2 rounded-full" style="width: 0%"></div>
            </div>
          </div>

          <!-- Cancelled -->
          <div>
            <div class="flex justify-between mb-1">
              <span class="text-sm font-medium text-gray-700">Annulées</span>
              <span id="cancelled-percent" class="text-sm font-medium text-gray-700">--%</span>
            </div>
            <div class="w-full bg-gray-200 rounded-full h-2">
              <div id="cancelled-bar" class="bg-red-500 h-2 rounded-full" style="width: 0%"></div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </main>

  <script>
    // Initialize Lucide icons
    lucide.createIcons();

    // Fetch task statistics with token
    fetch('/api/tasks/stats', {
      method: 'GET',
      headers: {
        'Content-Type': 'application/json',
      },
      credentials: 'include' // ✅ important pour envoyer les cookies au serveur
    })
      .then(response => response.json())
      .then(data => {
        // Update count displays
        document.getElementById('totalTasks').textContent = data.totalTasks || 0;
        document.getElementById('pending').textContent = (data.stats && data.stats.pending) || 0;
        document.getElementById('in_progress').textContent = (data.stats && data.stats.in_progress) || 0;
        document.getElementById('completed').textContent = (data.stats && data.stats.completed) || 0;
        document.getElementById('cancelled').textContent = (data.stats && data.stats.cancelled) || 0;

        // Calculate percentages for progress bars
        const total = data.totalTasks || 1; // Prevent division by zero
        const pendingPercent = Math.round(((data.stats && data.stats.pending) || 0) / total * 100);
        const inProgressPercent = Math.round(((data.stats && data.stats.in_progress) || 0) / total * 100);
        const completedPercent = Math.round(((data.stats && data.stats.completed) || 0) / total * 100);
        const cancelledPercent = Math.round(((data.stats && data.stats.cancelled) || 0) / total * 100);

        // Update percentage text
        document.getElementById('pending-percent').textContent = `${pendingPercent}%`;
        document.getElementById('in-progress-percent').textContent = `${inProgressPercent}%`;
        document.getElementById('completed-percent').textContent = `${completedPercent}%`;
        document.getElementById('cancelled-percent').textContent = `${cancelledPercent}%`;

        // Update progress bars
        document.getElementById('pending-bar').style.width = `${pendingPercent}%`;
        document.getElementById('in-progress-bar').style.width = `${inProgressPercent}%`;
        document.getElementById('completed-bar').style.width = `${completedPercent}%`;
        document.getElementById('cancelled-bar').style.width = `${cancelledPercent}%`;
      })
      .catch(err => {
        console.error('Erreur lors du chargement des statistiques:', err);
        // Show error message on the page
        const statsContainer = document.getElementById('stats');
        statsContainer.innerHTML += `
          <div class="mt-4 bg-red-50 border-l-4 border-red-500 p-4">
            <div class="flex">
              <div class="flex-shrink-0">
                <i data-lucide="alert-circle" class="h-5 w-5 text-red-500"></i>
              </div>
              <div class="ml-3">
                <p class="text-sm text-red-700">
                  Impossible de charger les statistiques. Veuillez réessayer plus tard.
                </p>
              </div>
            </div>
          </div>
        `;
        lucide.createIcons();
      });

    const socket = io();

    // Listen for task creation
    socket.on("task_created", (task) => {
      console.log("Task created:", task);
      // Update the dashboard dynamically (e.g., add the task to the list)
      // Example: Reload the stats or append the task to the task list
      window.location.reload(); // Simplified for now
    });

    // Listen for task updates
    socket.on("task_updated", (task) => {
      console.log("Task updated:", task);
      // Update the specific task in the dashboard
      window.location.reload(); // Simplified for now
    });

    // Listen for task deletion
    socket.on("task_deleted", ({ id }) => {
      console.log("Task deleted:", id);
      // Remove the task from the dashboard
      window.location.reload(); // Simplified for now
    });
  </script>

</body>

</html>